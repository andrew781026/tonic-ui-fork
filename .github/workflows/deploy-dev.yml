name: consumer-tonic-ui-dist

on:
  workflow_dispatch:
  push:
    branches:
      - dev

permissions:
  contents: write

jobs:
  plugin:
    name: deploy plugin
    runs-on: ebf-pod-ubuntu-2004@${{ github.run_id }}-plugin
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SERVICE_ACCOUNT_SSH_KEY }}

      - name: Check Node version
        run: node -v

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Create tag env
        id: tag
        run: echo "TAG=v$(node -e "console.log(require('./dist-package.json').version)")-${{ steps.extract_branch.outputs.branch }}.${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: build dist
        run: |
          npm i
          npm run build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: deploy
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          node publish.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          TAG: ${{ steps.tag.outputs.TAG }}

      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      # version specific version - https://stackoverflow.com/questions/48423867/npm-version-update-to-specific-version
      - run: |
          cd dist
          npm version "0.0.8-alpha.${{ github.run_number }}" --no-git-tag-version
          npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  ghpage:
    needs: plugin
    name: gh-page for doc
    runs-on: ebf-pod-ubuntu-2004@${{ github.run_id }}-ghpage
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SERVICE_ACCOUNT_SSH_KEY }}

      - name: Check Node version
        run: node -v

      - name: build astro
        run: |
          cd astro
          npm i
          npm run astro:build

      - name: deploy
        run: cd astro && npm run astro:deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


