---
import DarkImage from "../img/Dark.png";
import IconPlus from "../components/icons/IconPlus.astro";

const btnVariants = [
  'tcsmd-btn-primary', 'tcsmd-btn-default', 'tcsmd-btn-emphasis', 'tcsmd-btn-ghost',
  'tcsmd-text-btn-primary', 'tcsmd-text-btn-default', 'tcsmd-text-btn-emphasis',
];
const states = ['enabled', 'hover', 'active', 'disabled', 'loading', 'focus'];

const textColor = variant => ['default', 'ghost'].includes(variant) ? 'text-black' : 'text-white';
---

<!DOCTYPE html>
<html lang="zh-tw">
<head>
  <title>Color Palette</title>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width,initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
  <link rel="icon" type="image/png" sizes="16x16" href={DarkImage}>
  <style>
    .loader {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 2;
      background-color: inherit;
      border-radius: inherit;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    svg.circle-progress {
      width: 24px;
      height: 24px;
    }

    svg.circle-progress .bg {
      fill: none;
      stroke-width: 2px;
      stroke: currentColor;
      opacity: 0.4;
    }

    svg.circle-progress .progress {
      fill: none;
      stroke-width: 2px;
      stroke: currentColor;
      stroke-linecap: round;
      stroke-dasharray: 60;
      transform-origin: 50% 50%;
      animation: progress-circular-dash 1.4s ease-in-out infinite,progress-circular-rotate 1.4s linear infinite;
    }

    @keyframes progress-circular-dash {
      0% {
        stroke-dashoffset: 10;
      }
      30% {
        stroke-dashoffset: 55;
      }
      31% {
        stroke-dashoffset: 55;
      }
      100% {
        stroke-dashoffset: 10;
      }
    }

    @keyframes progress-circular-rotate {
      0% {
        transform: rotate(0deg);
      }
      30% {
        transform: rotate(720deg);
      }
      31% {
        transform: rotate(720deg);
      }
      100% {
        transform: rotate(1440deg);
      }
    }
  </style>
</head>
<body>
<main class="min-h-screen content-center p-8">
  <h1 class="flex text-3xl items-center mb-16">
    <img class="mr-4" src={DarkImage} alt="logo" width="50" height="50"/>
    Buttons
  </h1>
  <div class="flex flex-wrap gap-8">
    {
      btnVariants.map(variant => (
        <div class="w-full md:w-[600px] rounded-2xl border-8 border-amber-200">
          <h1 class="text-2xl font-900 bg-amber-200 p-2"> ðŸ“š {variant}</h1>
          <div class="p-4">
            <h2 class="text-2xl font-900 mr-auto mb-4"> ðŸ“ƒ State</h2>
            <div class="flex flex-wrap gap-3">
              <button class={`${variant}`}>Default</button>
              <button class={`${variant} hover`}>
                <IconPlus/>
                Hover
              </button>
              <button class={`${variant} active`}>
                <IconPlus/>
                active
                <IconPlus/>
              </button>
              <button class={`${variant} disabled`}>disabled</button>

              <button class={`${variant} loading`}>
                loading
                <div class="loader">
                  <svg class="circle-progress">
                    <circle class="bg" cx="12" cy="12" r="9"></circle>
                    <circle class="progress" cx="12" cy="12" r="9"></circle>
                  </svg>
                </div>
              </button>
              <button class={`${variant} focus`}>focus</button>
            </div>
            <hr class="hr">
            <h2 class="text-2xl font-900 mr-auto mb-4"> ðŸ“ƒ Rounded</h2>
            <div class="flex flex-wrap gap-3">
              <button class={`${variant} hover`}>Default</button>
              <button class={`${variant} hover rounded`}>Default</button>
            </div>
            <hr class="hr">
            <h2 class="text-2xl font-900 mr-auto mb-4"> ðŸ“ƒ Size</h2>
            <div class="flex flex-wrap gap-3 items-end">
              <button class={`${variant} hover xs`}>xs</button>
              <button class={`${variant} hover small`}>small</button>
              <button class={`${variant} hover`}>Default</button>
              <button class={`${variant} hover large`}>large</button>
            </div>
          </div>
        </div>
      ))
    }
  </div>
</main>
</body>
</html>
